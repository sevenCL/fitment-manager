apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.sureto.manager"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {

            minifyEnabled true

            shrinkResources true

            zipAlignEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        m360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "m360"]
        }
        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        umeng {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        appchina {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "appchina"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        lenovo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "lenovo"]
        }
        meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
        c25pp {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "25pp"]
        }
        oppo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "oppo"]
        }
        google {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "google"]
        }
        tencent {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "tencent"]
        }
        sougou {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "sougou"]
        }
        liqu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "liqu"]
        }
        pugongying {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "pugongying"]
        }
        jinli {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "jinli"]
        }
        others {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "others"]
        }
        huluxia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huluxia"]
        }
        anzhi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "anzhi"]
        }
        root360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "root360"]
        }
        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }
        bate {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "bate"]
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile project(':library')
    //可选，用于生成application类
    provided 'com.tencent.tinker:tinker-android-anno:1.7.3'
    //tinker的核心库
    compile 'com.tencent.tinker:tinker-android-lib:1.7.3'
    compile files('libs/AutoUpdate_SDK.jar')
}

////apply tinker插件
//apply plugin: 'com.tencent.tinker.patch'


//def gitSha() {
//    try {
//        String gitRev = 'git rev-parse --short HEAD'.execute(null, project.rootDir).text.trim()
//        if (gitRev == null) {
//            throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
//        }
//        return gitRev
//    } catch (Exception e) {
//        throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
//    }
//}
//
//def javaVersion = JavaVersion.VERSION_1_7
//
//def getTinkerIdValue() {
//    return hasProperty("TINKER_ID") ? TINKER_ID : gitSha()
//}
